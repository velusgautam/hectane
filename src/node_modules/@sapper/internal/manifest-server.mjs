// This file is generated by Sapper â€” do not edit it!
import component_0, { preload as preload_0 } from "../../../routes/index.svelte";
import component_1, { preload as preload_1 } from "../../../routes/interviews.svelte";
import component_2, { preload as preload_2 } from "../../../routes/technology.svelte";
import component_3, { preload as preload_3 } from "../../../routes/travelogue.svelte";
import component_4, { preload as preload_4 } from "../../../routes/learnings.svelte";
import component_5 from "../../../routes/about.svelte";
import component_6, { preload as preload_6 } from "../../../routes/blog/[slug].svelte";
import root from "../../../routes/_layout.svelte";
import error from "../../../routes/_error.svelte";

const d = decodeURIComponent;

export const manifest = {
	server_routes: [
		
	],

	pages: [
		{
			// index.svelte
			pattern: /^\/$/,
			parts: [
				{ name: "index", file: "index.svelte", component: component_0, preload: preload_0 }
			]
		},

		{
			// interviews.svelte
			pattern: /^\/interviews\/?$/,
			parts: [
				{ name: "interviews", file: "interviews.svelte", component: component_1, preload: preload_1 }
			]
		},

		{
			// technology.svelte
			pattern: /^\/technology\/?$/,
			parts: [
				{ name: "technology", file: "technology.svelte", component: component_2, preload: preload_2 }
			]
		},

		{
			// travelogue.svelte
			pattern: /^\/travelogue\/?$/,
			parts: [
				{ name: "travelogue", file: "travelogue.svelte", component: component_3, preload: preload_3 }
			]
		},

		{
			// learnings.svelte
			pattern: /^\/learnings\/?$/,
			parts: [
				{ name: "learnings", file: "learnings.svelte", component: component_4, preload: preload_4 }
			]
		},

		{
			// about.svelte
			pattern: /^\/about\/?$/,
			parts: [
				{ name: "about", file: "about.svelte", component: component_5 }
			]
		},

		{
			// blog/[slug].svelte
			pattern: /^\/blog\/([^\/]+?)\/?$/,
			parts: [
				null,
				{ name: "blog_$slug", file: "blog/[slug].svelte", component: component_6, preload: preload_6, params: match => ({ slug: d(match[1]) }) }
			]
		}
	],

	root,
	root_preload: () => {},
	error
};

export const build_dir = "__sapper__/dev";

export const src_dir = "src";

export const dev = true;