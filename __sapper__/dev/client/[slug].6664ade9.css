@media only screen and (min-width: 800px){.post--metadata.svelte-14isbyz{display:grid;grid-template-columns:0.8fr 2.2fr 0.4fr 1fr;-webkit-box-align:center;align-items:center}}.post__tag.svelte-14isbyz{padding:3px 5px;background-color:#dcdcdc;margin:2px 3px;border-radius:3px;display:inline-block}.post--body.svelte-14isbyz{margin:0px 10px}pre.svelte-14isbyz{margin-bottom:1em;padding:2% 4%;width:auto;max-height:900px;overflow:auto;font-size:1.4em;line-height:1.3em}img.svelte-14isbyz{max-width:100%}.center.svelte-14isbyz{display:block;margin:0 auto;box-shadow:-3px 8px 10px #d8d8d8;width:100%;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content;border-radius:2px}.post--title.svelte-14isbyz{font-size:36px;margin:15px 0 5px;font-weight:lighter}.post--sub-title.svelte-14isbyz{font-weight:lighter;font-size:22px;margin-top:10px}.post--metadata.svelte-14isbyz{margin-top:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */